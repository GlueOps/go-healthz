name: Publish to GHCR.io


on:
  workflow_run:
    workflows: ["Go"]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_tag_push_to_ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check for semver tag
        id: check_semver # Give the step an ID
        run: |
          BRANCH_NAME="${{ github.event.workflow_run.head_branch }}"
          
          # This regex matches v(major).(minor).(patch)-(optional-prerelease)
          REGEX="^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$"
          
          if [[ $BRANCH_NAME =~ $REGEX ]]; then
            echo "Branch '$BRANCH_NAME' is a valid semver tag. Proceeding."
            echo "continue=true" >> "$GITHUB_OUTPUT"
          else
            echo "Branch '$BRANCH_NAME' is not a valid semver tag. Skipping publish."
            echo "continue=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout repository
        if: steps.check_semver.outputs.continue == 'true'
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

          
      - name: Set up QEMU
        if: steps.check_semver.outputs.continue == 'true'
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Setup Docker buildx
        if: steps.check_semver.outputs.continue == 'true'
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log into registry ${{ env.REGISTRY }}
        if: steps.check_semver.outputs.continue == 'true'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        if: steps.check_semver.outputs.continue == 'true'
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,prefix=
            type=ref,event=tag,prefix=
            type=sha,format=short,prefix=
            type=sha,format=long,prefix=

      - name: ðŸ“¦ Generate lowercase image tag
        id: set_tag # Give this step an ID to reference its outputs
        run: |
          # 1. Build the original tag string
          ORIGINAL_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.workflow_run.head_branch }}"
          
          # 2. Convert it to lowercase using 'tr' (most reliable method)
          LOWER_TAG=$(echo "$ORIGINAL_TAG" | tr '[:upper:]' '[:lower:]')
          
          # 3. Save it as a step output
          echo "image_tag=$LOWER_TAG" >> $GITHUB_OUTPUT
          
          # 4. (Optional) Echo it just to see it in the logs
          echo "Image tag set to: $LOWER_TAG"

      - name: Build and push Docker image
        if: steps.check_semver.outputs.continue == 'true'
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: GlueOps-Dockerfile
          build-args: |
            GITHUB_TAG=${{ github.event.workflow_run.head_branch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }},${{ steps.set_tag.outputs.image_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max